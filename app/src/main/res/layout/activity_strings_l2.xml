<?xml version="1.0" encoding="utf-8"?>

<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/ScrollView01"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:background="@drawable/bgcolour">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/View01"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.5"
        app:layout_constraintStart_toStartOf="parent">

        <TextView
            android:id="@+id/t0"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="50dp"
            android:background="@drawable/edit_round"
            android:gravity="center"
            android:padding="10dp"
            android:text="Using Strings"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="visible"
            app:layout_constraintBottom_toTopOf="@+id/t1"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/t1"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="center"
            android:padding="10dp"
            android:text="There are several ways to create a String in Java."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.495"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t0" />

        <TextView
            android:id="@+id/t2"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="String s1 = new String(&quot;This is a String!&quot;);\nPlease Note! This is the recommended way.\n\nString s1;\ns1 = &quot;This is another way to make a String!&quot;;\n\nString s = &quot;Another string!&quot;;"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t3"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.495"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t1" />

        <TextView
            android:id="@+id/t3"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="center"
            android:padding="10dp"
            android:text="You cannot change the value of a String but you can reference them in a new String.\nWe will now look at some String methods."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t4"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.495"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t2" />

        <TextView
            android:id="@+id/t4"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="Firstly, lets create a String.\nString s1 = new String(&quot;The Bare Minimum&quot;);"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t5"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.495"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t3" />

        <TextView
            android:id="@+id/t5"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="Now lets get the length of one of our strings.\ns1.length();\nThis returns an int value of 16.\nNotice it counts spaces"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t6"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.495"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t4" />


        <TextView
            android:id="@+id/t6"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can also change the strings to upper or lower case.\ns1.toUpperCase();\ns1.toLowerCase();"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t7"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t5" />

        <TextView
            android:id="@+id/t7"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can get a char at a particular index in the String.\ns1.charAt(6);\nThis returns a char value of 'r'.\nNotice we start counting at 0"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t8"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.504"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t6" />

        <TextView
            android:id="@+id/t8"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can also get the index of which a char first occurred in our string.\ns1.indexOf('B');\nThis wil return an int of 4."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t9"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.504"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t7" />

        <TextView
            android:id="@+id/t9"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can replace all instances of a char with a second char specified.\ns1.replace('e','s');\nThis will return &quot;Ths Bars Minimum&quot;."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t10"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.503"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t8" />

        <TextView
            android:id="@+id/t10"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We are able to extract a substring from our String. We just need to specify the first and second int.\ns1.substring(0,3);\nThis returns &quot;The&quot;.\nThe substring begins at the specified index and extends to the character at the second index - 1."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t11"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.503"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t9" />

        <TextView
            android:id="@+id/t11"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can also create a substring of our string by just specifying a start index and will end at the end of the string.\ns1.substring(6);\nThis will return &quot;re Minimum&quot;."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t12"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.503"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t10" />

        <TextView
            android:id="@+id/t12"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We can join together (concatenate) two strings together using the (+) sign.\nString str1 = new String (&quot;Maynooth&quot;);\nString str2 = new String (&quot;University&quot;);\nString str3 = new String (str1 + str2);\nstr3 will have a value of &quot;MaynoothUniversity&quot;."
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/t13"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.503"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t11" />

        <TextView
            android:id="@+id/t13"
            android:layout_width="350sp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/edit_round"
            android:gravity="left"
            android:padding="10dp"
            android:text="We could, alternatively, use concat.\nstr1.concat(str2);"
            android:textColor="@android:color/black"
            android:textColorHighlight="#FF000000"
            android:textSize="15sp"
            android:visibility="invisible"
            app:layout_constraintBottom_toTopOf="@+id/b1"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.503"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t12" />

        <Button
            android:id="@+id/b1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="150dp"
            android:layout_marginTop="20dp"
            android:layout_marginEnd="150dp"
            android:layout_marginBottom="20dp"
            android:background="@drawable/b_round"
            android:text="Continue"
            android:textColor="@android:color/white"
            android:visibility="invisible"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/t13" />

        <TextView
            android:id="@+id/x"
            android:layout_width="15dp"
            android:layout_height="35dp"
            android:layout_marginStart="10dp"
            android:text="x"
            android:textColor="@android:color/white"
            android:textSize="30sp"
            app:layout_constraintBottom_toTopOf="@+id/t0"
            app:layout_constraintEnd_toEndOf="@+id/t0"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.0" />


    </androidx.constraintlayout.widget.ConstraintLayout>

</ScrollView>

